package rentacar.ui.form.car;

import rentacar.domain.CarModel;
import rentacar.repository.CarRepository;
import rentacar.repository.impl.CarRepositoryImpl;

import java.time.Instant;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.Date;
import java.util.List;
import rentacar.domain.request.CarSearchModel;
import rentacar.ui.form.Rented.NewRent;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import rentacar.domain.ContractsModel;
import rentacar.domain.response.RegisterResponseModel;
import rentacar.repository.impl.ContractRepositoryImpl;
import rentacar.ui.session.MySession;

/**
 *
 * @author mlade
 */
public class UpdateCar extends javax.swing.JDialog {

    /**
     * Creates new form UpdateCar
     */

    public LocalDate startDate = null;
    public LocalDate endDate = null;

    CarRepository carRepository = new CarRepositoryImpl();
    List<CarModel> cars = carRepository.getAllCars();

    public UpdateCar(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        populateTableCar();
        
        boolean logedIn = false;
        if (MySession.instanceValue() != null) {
            logedIn = true;
        }
        
        lblStartDate.setVisible(logedIn);
        lblEndDate.setVisible(logedIn);
        cldEndDate.setVisible(logedIn);
        cldStartDate.setVisible(logedIn);
        btnClear.setVisible(logedIn);
        btnRent.setVisible(logedIn);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtSearchByModel = new javax.swing.JTextField();
        txtSearchByYear = new javax.swing.JTextField();
        lblPrice = new javax.swing.JLabel();
        txtSearchByPrice = new javax.swing.JTextField();
        lblYear = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCars = new javax.swing.JTable();
        lblMake = new javax.swing.JLabel();
        txtSearchByMake = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        lblModel = new javax.swing.JLabel();
        lblAutomatic = new javax.swing.JLabel();
        cmbAutomatic = new javax.swing.JComboBox<>();
        cldStartDate = new com.toedter.calendar.JDateChooser();
        lblStartDate = new javax.swing.JLabel();
        lblEndDate = new javax.swing.JLabel();
        cldEndDate = new com.toedter.calendar.JDateChooser();
        btnClear = new javax.swing.JButton();
        btnRent = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblPrice.setText("Max price:");

        lblYear.setText("Year:");

        tblCars.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Make", "Model", "Year", "Engine capacity", "Color", "Price", "Doors", "Size", "Power", "Automatic", "Fuel"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCars);

        lblMake.setText("Make:");

        btnSearch.setText("Search:");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        lblModel.setText("Model:");

        lblAutomatic.setText("Automatic:");

        cmbAutomatic.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yes", "No", " " }));
        cmbAutomatic.setSelectedIndex(2);
        cmbAutomatic.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        lblStartDate.setText("Start date:");

        lblEndDate.setText("End date:");

        btnClear.setText("Clear dates");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnRent.setText("Update");
        btnRent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRentActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMake)
                            .addComponent(lblPrice))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSearchByMake, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSearchByPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblModel)
                            .addComponent(lblYear))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSearchByModel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSearchByYear, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblAutomatic)
                                .addGap(4, 4, 4)
                                .addComponent(cmbAutomatic, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSearch)
                                .addGap(49, 49, 49))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblStartDate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cldStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(lblEndDate)
                                .addGap(26, 26, 26)
                                .addComponent(cldEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnClear)
                                .addContainerGap(8, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRent)
                        .addGap(37, 37, 37))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblAutomatic)
                                .addComponent(cmbAutomatic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblMake)
                                .addComponent(txtSearchByMake, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnSearch)
                                .addComponent(lblModel)
                                .addComponent(txtSearchByModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(15, 15, 15)
                        .addComponent(cldEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblPrice)
                                .addComponent(txtSearchByPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblYear)
                                .addComponent(txtSearchByYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblStartDate)
                                .addComponent(lblEndDate))
                            .addComponent(cldStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)))
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRent)
                    .addComponent(btnDelete))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String make = txtSearchByMake.getText().trim();
        String model = txtSearchByModel.getText().trim();
        //String color = txtSearchByColor.getText().trim();
        String automatic = String.valueOf(cmbAutomatic.getSelectedItem());

        String priceTxt = txtSearchByPrice.getText().trim();
        String yearTxt = txtSearchByYear.getText().trim();

        //System.out.println(startDate);
        //System.out.println(endDate);

        cldStartDate.setDateFormatString("yyyy-MM-dd");
        Date selectedStartDate = cldStartDate.getDate();
        //System.out.println(selectedStartDate);
        if (selectedStartDate != null) {
            Instant instantStart = selectedStartDate.toInstant();                                               // Pretvaranje JCalendar u LocalDate

            LocalDateTime localStartDateTime = instantStart.atZone(ZoneId.systemDefault()).toLocalDateTime();
            startDate = localStartDateTime.toLocalDate();
        }

        cldEndDate.setDateFormatString("yyyy-MM-dd");
        Date selectedEndDate = cldEndDate.getDate();
        //System.out.println(selectedEndDate);
        if (selectedEndDate != null) {
            Instant instantEnd = selectedEndDate.toInstant();                                                   // Pretvaranje JCalendar u LocalDate

            LocalDateTime localEndDateTime = instantEnd.atZone(ZoneId.systemDefault()).toLocalDateTime();
            endDate = localEndDateTime.toLocalDate();
        }

        CarSearchModel csm = new CarSearchModel();

        if (!make.isEmpty()) {
            csm.setMake(make);
        }

        if (!model.isEmpty()) {
            csm.setModel(model);
        }

        if (!priceTxt.isEmpty()) {
            Double price = Double.parseDouble(priceTxt);
            csm.setPrice(price);
        }

        if (!yearTxt.isEmpty()) {
            Integer year = Integer.parseInt(yearTxt);
            csm.setYear(year);
        }

        if (automatic.equals("Yes")) {
            automatic = "True";
        }else if(automatic.equals("No")){
            automatic = "False";
        }else{
            automatic = null;
        }

        csm.setAutomatic(automatic);

        CarRepository carRepository = new CarRepositoryImpl();

        List<CarModel> cars = carRepository.getAllAvailableCars(startDate, endDate, csm);

        DefaultTableModel dtm = (DefaultTableModel) tblCars.getModel();
        dtm.setRowCount(0);

        for (CarModel car :
            cars) {
            Object[] rowData = {car.getMake(), car.getModel(), car.getYear(), car.getEngine_capacity(), car.getColor(), car.getPrice(), car.getDoors(), car.getSize(), car.getPower(), car.isAutomatic(), car.getFuel()};
            dtm.addRow(rowData);
        }
        selectedStartDate = null;
        selectedEndDate = null;
        //System.out.println(startDate);
        //System.out.println(endDate);

    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        cldStartDate.setDate(null);
        cldEndDate.setDate(null);
        startDate = null;
        endDate = null;
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnRentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRentActionPerformed
        int selectedRow = tblCars.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Niste izabrali auto");
            return;
        }

        int id = cars.get(selectedRow).getCar_id();
        
        
        JFrame parent = (JFrame) getParent();
        new UpdateCarForm(parent,true,id).setVisible(true);
        
        
    }//GEN-LAST:event_btnRentActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int selectedRow = tblCars.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Niste izabrali auto");
            return;
        }

        int id = cars.get(selectedRow).getCar_id();
        
        int results = JOptionPane.showConfirmDialog(this, "Da li zelite da izbrisete auto?", "Iznajmi auto", JOptionPane.YES_NO_OPTION);
        
        if (results == 0) { //Yes
            
            carRepository.delete(id);


            JOptionPane.showMessageDialog(this, "Automobil ID = "+id+" je izbrisan");
        }else{ //No
            
        }
        
        populateTableCar();
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UpdateCar dialog = new UpdateCar(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnRent;
    private javax.swing.JButton btnSearch;
    private com.toedter.calendar.JDateChooser cldEndDate;
    private com.toedter.calendar.JDateChooser cldStartDate;
    private javax.swing.JComboBox<String> cmbAutomatic;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAutomatic;
    private javax.swing.JLabel lblEndDate;
    private javax.swing.JLabel lblMake;
    private javax.swing.JLabel lblModel;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblStartDate;
    private javax.swing.JLabel lblYear;
    private javax.swing.JTable tblCars;
    private javax.swing.JTextField txtSearchByMake;
    private javax.swing.JTextField txtSearchByModel;
    private javax.swing.JTextField txtSearchByPrice;
    private javax.swing.JTextField txtSearchByYear;
    // End of variables declaration//GEN-END:variables

    private void populateTableCar() {
        
        DefaultTableModel dtm = (DefaultTableModel) tblCars.getModel();
        dtm.setRowCount(0);
        
        cars = carRepository.getAllCars();

        for (CarModel car :
                cars) {
            Object[] rowData = {car.getMake(), car.getModel(), car.getYear(), car.getEngine_capacity(), car.getColor(), car.getPrice(), car.getDoors(), car.getSize(), car.getPower(), car.isAutomatic(), car.getFuel()};
            dtm.addRow(rowData);
        }
    }
}
